{"id":"ede858d87292743c4cc59f6ec1a2d5d0","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Lottery.sol":{"content":"// To enter the lottery one has to pay a certain amount\n// The contract picks a random winner(using the verifiable random function)\n// Winner should be selected every X minutes(which is completely automated- so no one tampers with contract at any time)\n// Use of ChainLink Oracles, Randomness, Automated Execution through Chainlink Keepers that trigger the contract\n// to do something once some agreement has been reached\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract Lottery {}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/Lottery.sol":{"ast":{"absolutePath":"contracts/Lottery.sol","exportedSymbols":{"Lottery":[2]},"id":3,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"456:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Lottery","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2,"linearizedBaseContracts":[2],"name":"Lottery","nameLocation":"490:7:0","nodeType":"ContractDefinition","nodes":[],"scope":3,"src":"481:19:0","usedErrors":[]}],"src":"456:45:0"},"id":0}},"contracts":{"contracts/Lottery.sol":{"Lottery":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d9139ef15f5dfc3e3d797c41ed19baca4550f026d2dd5484d20e25abc9e7992764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT SWAP15 CALL 0x5F 0x5D 0xFC RETURNDATACOPY RETURNDATASIZE PUSH26 0x7C41ED19BACA4550F026D2DD5484D20E25ABC9E7992764736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"481:19:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220d9139ef15f5dfc3e3d797c41ed19baca4550f026d2dd5484d20e25abc9e7992764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT SWAP15 CALL 0x5F 0x5D 0xFC RETURNDATACOPY RETURNDATASIZE PUSH26 0x7C41ED19BACA4550F026D2DD5484D20E25ABC9E7992764736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"481:19:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lottery.sol\":{\"content\":\"// To enter the lottery one has to pay a certain amount\\n// The contract picks a random winner(using the verifiable random function)\\n// Winner should be selected every X minutes(which is completely automated- so no one tampers with contract at any time)\\n// Use of ChainLink Oracles, Randomness, Automated Execution through Chainlink Keepers that trigger the contract\\n// to do something once some agreement has been reached\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\ncontract Lottery {}\\n\",\"keccak256\":\"0x8c81969f640f2e35eb68ed001fbdc8d965313ac0af07a0896550df4f96f4fad9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}